name: Release

# This workflow will run on main branch to build, test and deploy frontend application.
# SCM release tag will also be created on repository.
on:
    push:
        branches:
            - main

jobs:
    build:
        runs-on: ubuntu-latest
        permissions: write-all

        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: "20"

            - name: Setup Pages
              uses: actions/configure-pages@v5

            - name: Install dependencies
              run: npm install

            - name: Build from typescript files
              id: build
              run: npm run build

            - name: Upload artifact
              uses: actions/upload-pages-artifact@v3
              id: publish
              with:
                  path: ./dist
                  retention-days: 30

            - name: Get version from package.json
              id: version
              run: |
                  RELEASE_VERSION=$(npm v ./ version)
                  echo "RELEASE_VERSION=$RELEASE_VERSION" >> "$GITHUB_ENV"

            - name: trigger docker
              env:
                  GH_TOKEN: ${{ github.token }}
              run: |
                  gh workflow run docker-publish.yml --field tag="$RELEASE_VERSION"

    cleanup:
        runs-on: ubuntu-latest
        permissions: write-all

        steps:
            - name: Delete inactive deployments
              uses: strumwolf/delete-deployment-environment@v2
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  environment: github-pages
                  onlyRemoveDeployments: true

    deploy:
        needs:
            - build
            - cleanup
        permissions:
            pages: write # to deploy to Pages
            id-token: write # to verify the deployment originates from an appropriate source
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        runs-on: ubuntu-latest
        steps:
            - name: Deploy to GitHub Pages
              id: deployment
              uses: actions/deploy-pages@v4
              with:
                  token: ${{ github.token }}
