name: Release

# This workflow will run on main branch to build, test and deploy frontend application.
# SCM release tag will be created on repository as well.
on:
    push:
        branches:
            - main
            - develop

jobs:
    # this will build the artifacts needed for deploy using the npm run build command
    build:
        runs-on: ubuntu-latest

        steps:
            - name: "Checkout"
              uses: actions/checkout@v4

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                node-version: "20"
                cache: ${{ steps.detect-package-manager.outputs.manager }}
            
            - name: Setup Pages
              uses: actions/configure-pages@v5

            - name: Install dependencies
              run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

            - name: Generate typescript files
              run: ${{ steps.detect-package-manager.outputs.runner }} tsc -b

            - name: Generate typescript files
              run: ${{ steps.detect-package-manager.outputs.runner }} vite build

            - name: Upload artifact
              uses: actions/upload-pages-artifact@v4
              with:
                path: ./out


    deploy:
    # Add a dependency to the build job
        needs: build

        # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
        permissions:
            pages: write      # to deploy to Pages
            id-token: write   # to verify the deployment originates from an appropriate source

        # Deploy to the github-pages environment
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}

        # Specify runner + deployment step
        runs-on: ubuntu-latest
        steps:
            - name: Deploy to GitHub Pages
              id: deployment
              uses: actions/deploy-pages@v4 # or specific "vX.X.X" version tag for this action
              with:
                token: ${{ github.token }}